[
    {
        "id": "a16837866ec75648",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c3d3f204f653a75a",
        "type": "group",
        "z": "a16837866ec75648",
        "name": "Extraction nodes",
        "style": {
            "fill": "#e3f3d3",
            "fill-opacity": "0.66",
            "label": true,
            "stroke": "#addb7b",
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "70def0f922eb5d07",
            "48523ad586983d77",
            "65c068484f2c191f",
            "7a5eb927b0dcdcc1",
            "f1f9e4f95b638987",
            "dc8611090ce702ed",
            "9bd68e9747fb4d53",
            "d4671da30291ef44",
            "00289b074cf17b09",
            "c6194ce1aec9cbc8",
            "a8f5b3c2d9e4f1a7",
            "b7e6c4d1a8f2b9c5",
            "e3f8d5a1b6c9e2f4"
        ],
        "x": 134,
        "y": 279,
        "w": 1052,
        "h": 322
    },
    {
        "id": "f4cdab2561ef4edb",
        "type": "comment",
        "z": "a16837866ec75648",
        "name": "The `@statuscompliance/extraction` package is a collection of Node-RED components \\n specifically designed for the STATUS project, focusing on extracting information from \\n event traces and JSON objects. These nodes facilitate the retrieval of specific \\n properties and values, enabling more efficient data handling within workflows.",
        "info": "The `@statuscompliance/extraction` package is a collection of Node-RED components \\n specifically designed for the STATUS project, focusing on extracting information from \\n event traces and JSON objects. These nodes facilitate the retrieval of specific \\n properties and values, enabling more efficient data handling within workflows.",
        "x": 660,
        "y": 140,
        "wires": []
    },
    {
        "id": "70def0f922eb5d07",
        "type": "last-timestamp",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "",
        "activity": "Login",
        "position": "1",
        "params": {
            "activity": "string",
            "position": "number"
        },
        "x": 840,
        "y": 380,
        "wires": [
            [
                "f1f9e4f95b638987"
            ]
        ]
    },
    {
        "id": "48523ad586983d77",
        "type": "get-property-value",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "",
        "propertyToGet": "name",
        "params": {
            "propertyToGet": "string"
        },
        "x": 850,
        "y": 440,
        "wires": [
            [
                "00289b074cf17b09"
            ]
        ]
    },
    {
        "id": "65c068484f2c191f",
        "type": "find-object",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "",
        "key": "name",
        "keyValue": "Bob",
        "params": {
            "key": "string",
            "keyValue": "string"
        },
        "x": 830,
        "y": 320,
        "wires": [
            [
                "f1f9e4f95b638987"
            ]
        ]
    },
    {
        "id": "7a5eb927b0dcdcc1",
        "type": "get-kv-property",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "",
        "keyToSearch": "concept:name",
        "payloadProperty": "events",
        "response": "result",
        "params": {
            "keyToSearch": "string",
            "payloadProperty": "string",
            "response": "string"
        },
        "x": 840,
        "y": 500,
        "wires": [
            [
                "f1f9e4f95b638987"
            ]
        ]
    },
    {
        "id": "f1f9e4f95b638987",
        "type": "debug",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 400,
        "wires": []
    },
    {
        "id": "dc8611090ce702ed",
        "type": "inject",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "Find the object with key 'name' and value 'Bob'",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":1,\"name\":\"Alice\",\"role\":\"developer\"},{\"id\":2,\"name\":\"Bob\",\"role\":\"designer\"},{\"id\":3,\"name\":\"Charlie\",\"role\":\"manager\"}]",
        "payloadType": "json",
        "x": 360,
        "y": 320,
        "wires": [
            [
                "65c068484f2c191f"
            ]
        ]
    },
    {
        "id": "9bd68e9747fb4d53",
        "type": "inject",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "Finds the latest timestamp for a specified activity 'Login' within a trace event",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"event\":[{\"string\":[{\"$\":{\"key\":\"concept:name\",\"value\":\"Login\"}},{\"$\":{\"key\":\"concept:instance\",\"value\":\"1234\"}}],\"date\":[{\"$\":{\"key\":\"time:timestamp\",\"value\":\"2024-11-18T10:00:00Z\"}}]},{\"string\":[{\"$\":{\"key\":\"concept:name\",\"value\":\"Logout\"}},{\"$\":{\"key\":\"concept:instance\",\"value\":\"1234\"}}],\"date\":[{\"$\":{\"key\":\"time:timestamp\",\"value\":\"2024-11-18T11:00:00Z\"}}]},{\"string\":[{\"$\":{\"key\":\"concept:name\",\"value\":\"Login\"}},{\"$\":{\"key\":\"concept:instance\",\"value\":\"5678\"}}],\"date\":[{\"$\":{\"key\":\"time:timestamp\",\"value\":\"2024-11-18T09:30:00Z\"}}]}]}",
        "payloadType": "json",
        "x": 450,
        "y": 380,
        "wires": [
            [
                "70def0f922eb5d07"
            ]
        ]
    },
    {
        "id": "d4671da30291ef44",
        "type": "inject",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "Extracts the 'name' value from an object in the payload",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\":\"Alice\",\"age\":30,\"location\":\"Wonderland\"}",
        "payloadType": "json",
        "x": 380,
        "y": 440,
        "wires": [
            [
                "48523ad586983d77"
            ]
        ]
    },
    {
        "id": "00289b074cf17b09",
        "type": "debug",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "msg.value",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "value",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 460,
        "wires": []
    },
    {
        "id": "c6194ce1aec9cbc8",
        "type": "inject",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "Retrieves a specific key-value property from a nested object within the payload",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{   \"events\": [     {       \"$\": { \"key\": \"concept:name\", \"value\": \"Login\" },       \"timestamp\": \"2024-11-18T10:00:00Z\"     },     {       \"$\": { \"key\": \"concept:name\", \"value\": \"Logout\" },       \"timestamp\": \"2024-11-18T11:00:00Z\"     }   ] }",
        "payloadType": "json",
        "x": 460,
        "y": 500,
        "wires": [
            [
                "7a5eb927b0dcdcc1"
            ]
        ]
    },
    {
        "id": "a8f5b3c2d9e4f1a7",
        "type": "inject",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "PCM Example: Sends sensor data for ML prediction",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"temperature\": 85.5, \"humidity\": 60.2, \"pressure\": 1013.25, \"vibration\": 0.15, \"timestamp\": \"2024-10-16T14:30:00Z\"}",
        "payloadType": "json",
        "x": 380,
        "y": 560,
        "wires": [
            [
                "b7e6c4d1a8f2b9c5"
            ]
        ]
    },
    {
        "id": "b7e6c4d1a8f2b9c5",
        "type": "get-property-value",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "PCM Enabled",
        "propertyToGet": "",
        "enablePCM": true,
        "mlUrl": "https://api.example-ml.com",
        "mlEndpoint": "/predict/compliance",
        "params": {
            "propertyToGet": "string"
        },
        "x": 850,
        "y": 560,
        "wires": [
            [
                "e3f8d5a1b6c9e2f4"
            ]
        ]
    },
    {
        "id": "e3f8d5a1b6c9e2f4",
        "type": "debug",
        "z": "a16837866ec75648",
        "g": "c3d3f204f653a75a",
        "name": "PCM prediction",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "value",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 560,
        "wires": []
    }
]